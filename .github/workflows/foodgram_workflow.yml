name: Django-app workflow

on: [push]

jobs:
  tests:
    name: Test and pytest
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    - name: Set up Python
      uses: actions/setup-python@v3
      with:
        python-version: 3.7

    - name: Install dependencies
      run: | 
        python -m pip install --upgrade pip 
        pip install flake8 pep8-naming flake8-broken-line flake8-return flake8-isort
        pip install -r backend/requirements.txt

    - name: Test with flake8 and django tests
      run: |
        python -m flake8 backend/

  build_push_frontend_to_DockerHub:
    name: Push Docker image to Docker Hub
    runs-on: ubuntu-latest
    needs: tests
    if: github.ref == 'refs/heads/master'
    steps:
      - uses: actions/checkout@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Login to Docker
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Push "frontend" to DockerHub
        uses: docker/build-push-action@v2
        with:
          context: ./
          push: true
          file: ./frontend/Dockerfile
          tags: jabbas15/foodgram_frontend:latest

  build_push_backend_to_DockerHub:
    name: Push Docker image to Docker Hub
    runs-on: ubuntu-latest
    needs: tests
    if: github.ref == 'refs/heads/master'
    steps:
      - name: Check out the repo
        uses: actions/checkout@v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      - name: Login to Docker
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Push "backend" to DockerHub
        uses: docker/build-push-action@v2
        with:
          context: ./
          push: true
          file: ./backend/Dockerfile
          tags: jabbas15/foodgram_backend:latest

  deploy:
      name: Deploy
      runs-on: ubuntu-latest
      needs: [
        build_push_backend_to_DockerHub,
        build_push_frontend_to_DockerHub
      ]
      steps:
        - name: executing remote ssh commands to deploy
          uses: appleboy/ssh-action@master
          with:
            host: ${{ secrets.HOST }}
            username: ${{ secrets.USER }}
            key: ${{ secrets.SSH_KEY }}
            passphrase: ${{ secrets.PASSPHRASE }}
            script: |
              sudo docker pull jabbas15/foodgram_frontend:latest
              sudo docker pull jabbas15/foodgram_backend:latest
              sudo docker-compose stop
              sudo docker-compose rm web
              touch .env
              echo ALLOWED_HOSTS=${{ secrets.ALLOWED_HOSTS }} >> .env
              echo DB_ENGINE=${{ secrets.DB_ENGINE }} >> .env
              echo DB_NAME=${{ secrets.DB_NAME }} >> .env
              echo POSTGRES_USER=${{ secrets.POSTGRES_USER }} >> .env
              echo POSTGRES_PASSWORD=${{ secrets.POSTGRES_PASSWORD }} >> .env
              echo DB_HOST=${{ secrets.DB_HOST }} >> .env
              echo DB_PORT=${{ secrets.DB_PORT }} >> .env
              sudo docker-compose up -d
  send_message:
    name: Telegram Message
    runs-on: ubuntu-latest
    needs: deploy
    steps:
      - name: send message
        uses: appleboy/telegram-action@master
        with:
          to: ${{ secrets.TELEGRAM_TO }}
          token: ${{ secrets.TELEGRAM_TOKEN }}
          message: Git Action успешно выполнен!